'''문제
KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. 산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.

같은 양의 두 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다. 이 연구소에서는 같은 양의 두 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다.

예를 들어, 주어진 용액들의 특성값이 [-2, 4, -99, -1, 98]인 경우에는 특성값이 -99인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고, 이 용액이 특성값이 0에 가장 가까운 용액이다. 참고로, 두 종류의 알칼리성 용액만으로나 혹은 두 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.

산성 용액과 알칼리성 용액의 특성값이 주어졌을 때, 이 중 두 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액을 찾는 프로그램을 작성하시오.

입력
첫째 줄에는 전체 용액의 수 N이 입력된다. N은 2 이상 100,000 이하이다. 둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다. N개의 용액들의 특성값은 모두 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.

출력
첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 두 용액의 특성값을 출력한다. 출력해야 하는 두 용액은 특성값의 오름차순으로 출력한다. 특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.'''
s = int(input())
k = list(map(int, input().split()))
k.sort()
left = 0
right = s-1
minv = float('inf')
c1,c2 =0,0
while left < right :
    v=k[left] + k[right]
    if abs(v) <= minv:
        minv = abs(v)
        c1,c2 = left,right
    if v <0:
        left += 1
    else:
        right -=1
print(k[c1],k[c2])

'''문제
문자열 S가 주어졌을 때, S의 서로 다른 부분 문자열의 개수를 구하는 프로그램을 작성하시오.

부분 문자열은 S에서 연속된 일부분을 말하며, 길이가 1보다 크거나 같아야 한다.

예를 들어, ababc의 부분 문자열은 a, b, a, b, c, ab, ba, ab, bc, aba, bab, abc, abab, babc, ababc가 있고, 서로 다른것의 개수는 12개이다.

입력
첫째 줄에 문자열 S가 주어진다. S는 알파벳 소문자로만 이루어져 있고, 길이는 1,000 이하이다.

출력
첫째 줄에 S의 서로 다른 부분 문자열의 개수를 출력한다.'''
s = input()
mo = set()
for length in range(1, len(s)+1): 
    for i in range(len(s) - length + 1): 
        mo.add(s[i:i+length])
    
print(len(mo))

'''문제
수 N개 A1, A2, ..., AN이 주어진다. 이때, 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 구하는 프로그램을 작성하시오.

즉, Ai + ... + Aj (i ≤ j) 의 합이 M으로 나누어 떨어지는 (i, j) 쌍의 개수를 구해야 한다.

입력
첫째 줄에 N과 M이 주어진다. (1 ≤ N ≤ 106, 2 ≤ M ≤ 103)

둘째 줄에 N개의 수 A1, A2, ..., AN이 주어진다. (0 ≤ Ai ≤ 109)

출력
첫째 줄에 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 출력한다.'''
n,m = map(int, input().split())
l = list(map(int, input().split()))
cnt=[0] * m
cnt[0] = 1
p=0
ans = 0
for a in l:
    p = (p+a)%m
    ans += cnt[p] 
    cnt[p]+=1
print(ans)

'''4번 문제 – 해시 + 투 포인터

문제: 고유한 숫자 쌍의 개수

정수로 이루어진 리스트가 주어집니다. 이 중 두 수를 골라 합이 K가 되는 서로 다른 쌍의 개수를 구하세요.
단, 순서는 고려하지 않으며 (a, b)와 (b, a)는 같은 쌍으로 봅니다.

입력
	•	첫째 줄: 정수 N과 K (1 ≤ N ≤ 10⁵, -10⁹ ≤ K ≤ 10⁹)
	•	둘째 줄: 정수 N개

출력
	•	합이 K가 되는 고유한 쌍의 개수'''
n,k = map(int, input().split())
l = set(map(int, input().split()))
ll = sorted(list(l))
left = 0
right = len(ll)- 1
cnt = 0
while left < right:
    lll = ll[left]+ ll[right]
    if lll == k:
        cnt += 1
        left +=1
    elif lll > k:
        right -= 1
    else:
        left +=1
print(cnt)

''' 5번 문제 – 누적합(Prefix Sum)

문제: 연속 구간 중 최대 길이 구하기

정수로 이루어진 리스트가 주어집니다. 이 중에서 합이 K 이하인 연속된 부분 구간 중 가장 긴 길이를 구하세요.

입력
	•	첫째 줄: 정수 N과 K (1 ≤ N ≤ 10⁵, 1 ≤ K ≤ 10⁹)
	•	둘째 줄: 정수 N개

출력
	•	조건을 만족하는 최장 길이 출력'''
n,k = map(int, input().split())
l = list(map(int, input().split()))
left = 0
total = 0
maxl = 0
for right in range(n):
    total += l[right]
    while total > k:
        total -= l[left]
        left+=1
        
    maxl = max(maxl, right-left+1)
print(maxl)